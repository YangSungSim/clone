#신한 증권 API에서 당일 거래한 손익 및 총자산 거래 기록을 받아서 
#메모장으로 출력합니다.

import sys, os
import PyQt5.QtGui import *
import PyQt5.QtCore import *
import PyQt5.QAxContainer import *
import PyQt5.QtWidgets import QApplication
import PyQt5.QtWidgets import QMainWindow
import PyQt5.QtWidgets import QPushButton
import PyQt5.QtWidgets import QLineEdit
import win32com.client
import datetime

class IndiWindow(QMainWindow):
    def __init__(self):
        super(IndiWindow, self).__init__()

        # QT 타이틀
        self.setWindowTitle("IndiExample")

        # 인디의 TR을 처리할 변수를 생성합니다.
        # self.IndiTR = QAxWidget("GIEXPERTCONTROL64.GiExpertControl64Ctrl.1")
        self.IndiTR = QAxWidget("GIEXPERTCONTROL.GiExpertControlCtrl.1")


        # Indi API event
        self.IndiTR.ReceiveData.connect(self.ReceiveData)
        self.IndiTR.ReceiveSysMsg.connect(self.ReceiveSysMsg)
        self.rqidD = {}  # TR 관리를 위해 사전 변수를 하나 생성합니다.

        # PyQt5를 통해 버튼만들고 함수와 연결시킵니다.
        btnResearch = QPushButton("397", self)
        btnResearch.setGeometry(20, 50, 50, 20)
        btn_Series = [self.btn_Search,self.btn_Search1,self.btn_Search2]
        for i in btn_Series:
            btnResearch.clicked.connect(i)  # 버튼을 누르면 'btn_Search' 함수가 실행됩니다.

    # 계좌번호를 입력하고 버튼을 누르면 조회를 요청합니다.
    def btn_Search(self):  # 397 총자산
        # SABA200QB : 계좌별 잔고 조회를 요청할 TR입니다.
        # 해당 TR의 필드입력형식에 맞춰서 TR을 날리면 됩니다.

        ret = self.IndiTR.dynamicCall("SetQueryName(QString)", "SABA655Q1")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 0, "04111146397")  # 계좌번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 1, "01")  # 상품구분 항상 '01'
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 2, "****")  # 비밀번호

        rqid = self.IndiTR.dynamicCall("RequestData()")  # 데이터 요청
        self.rqidD[rqid] = "SABA655Q1"

    def btn_Search1(self):
        # 397 매매내역조회
        ret = self.IndiTR.dynamicCall("SetQueryName(QString)", "SABC203Q2")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 0, "04111146397")  # 계좌번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 1, "****")  # 상품구분 항상 '01'
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 2, "%")  # 비밀번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 3, "%")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 4, "000")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 5, "1")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 6, str(today))
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 7, str(today))
        rqid = self.IndiTR.dynamicCall("RequestData()")  # 데이터 요청
        self.rqidD[rqid] = "SABC203Q2"

    def btn_Search2(self):
        # 397계좌 수수료 당일 매매 손익
        ret = self.IndiTR.dynamicCall("SetQueryName(QString)", "SABC670Q2")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 0, "04111146397")  # 계좌번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 1, "****")  # 비밀번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 2, str(today))  # 조회시작일
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 3, str(today))  # 조회마지막일
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 4, "0")  # 구분코드 선물:1
        rqid = self.IndiTR.dynamicCall("RequestData()")  # 데이터 요청
        self.rqidD[rqid] = "SABC670Q2"


    # 요청한 TR로 부터 데이터를 받는 함수입니다.
    def ReceiveData(self, rqid):
        # TR을 날릴때 ID를 통해 TR이름을 가져옵니다.
        TRName = self.rqidD[rqid]

        if (TRName == "SABA655Q1"):  #397 총자산

            self.DATA397['총자산'].append(int(self.IndiTR.dynamicCall("GetSingleData(int)", 1)))

        if TRName == "SABC203Q2":  # 397 계좌 매매손익 보고서
            nCnt = self.IndiTR.dynamicCall("GetMultiRowcount()")
            DATA2 = {}
            buy_sum = 0
            sell_sum = 0
            chegeul1 = 0
            chegeul2 = 0
            for i in range(0, nCnt):
                DATA2['주문일자'] = self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 0)
                DATA2['종목코드'] = self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 1)
                DATA2['매매구분명'] = self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 2)
                DATA2['체결수량'] = self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 3)
                DATA2['체결단가'] = self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 4)
                DATA2['체결금액'] = self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 5)
                DATA2['매매손익금액'] = self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 6)
                DATA2['수수료'] = self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 7)
                if self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 2) == "매수":
                    buy_sum += int(self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 5))
                elif self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 2) == "매도":
                    sell_sum += int(self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 5))
                if self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 2) == "매수":
                    chegeul1 += int(self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 3))
                if self.IndiTR.dynamicCall("GetMultiData(int,int)", i, 2) == "매도":
                    chegeul2 += int(self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 3))

            self.DATA397['매수약정금액'].append(buy_sum)
            self.DATA397["매도약정금액"].append(sell_sum)
            self.DATA397["체결수량"].append(chegeul1)

        if TRName == "SABC670Q2":  # 397 계좌 당일 손익 과 수수료
            nCnt = self.IndiTR.dynamicCall("GetMultiRowcount()")
            for i in range(0,nCnt):
                self.DATA397['수수료'].append(self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 5))
                self.DATA397['당일손익'].append(self.IndiTR.dynamicCall("GetMultiData(int, int)", i, 10))
        self.rqidD.__delitem__(rqid)

    # 시스템 메시지를 받은 경우 출력합니다.
    def ReceiveSysMsg(self, MsgID):
        print("System Message Received = ", MsgID)



class IndiWindow1(QMainWindow):
    def __init__(self):
        super(IndiWindow1, self).__init__()
        self.setWindowTitle("IndiExample")

        # 인디의 TR을 처리할 변수를 생성합니다.
        self.IndiTR = QAxWidget("GIEXPERTCONTROL.GiExpertControlCtrl.1")

        # Indi API event
        self.IndiTR.ReceiveData.connect(self.ReceiveData)
        self.IndiTR.ReceiveSysMsg.connect(self.ReceiveSysMsg)
        self.rqidD = {}  # TR 관리를 위해 사전 변수를 하나 생성합니다.

        # PyQt5를 통해 버튼만들고 함수와 연결시킵니다.
        btnResearch = QPushButton("505", self)
        btnResearch.setGeometry(20, 50, 50, 20)
        btn_Series = [self.btn_Search,self.btn_Search1]
        for i in btn_Series:
            btnResearch.clicked.connect(i)  # 버튼을 누르면 'btn_Search' 함수가 실행됩니다.

    def btn_Search(self):  # 505 총자산
        ret = self.IndiTR.dynamicCall("SetQueryName(QString)", "SABA655Q1")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 0, "04111184505")  # 계좌번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 1, "01")  # 상품구분 항상 '01'
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 2, "****")  # 비밀번호

        rqid = self.IndiTR.dynamicCall("RequestData()")  # 데이터 요청
        self.rqidD[rqid] = "SABA655Q1"

    def btn_Search1(self):  #505 전일금일
        ret = self.IndiTR.dynamicCall("SetQueryName(QString)", "SABA623Q1")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 0, "04111184505")  # 계좌번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 1, "01")  # 상품구분 항상 '01'
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 2, "****")  # 비밀번호

        rqid = self.IndiTR.dynamicCall("RequestData()")  # 데이터 요청
        self.rqidD[rqid] = "SABA623Q1"

    def ReceiveData(self, rqid):
        TRName = self.rqidD[rqid]

        if (TRName == "SABA655Q1"):  # 505 총자산

            self.DATA505['총자산'].append(int(self.IndiTR.dynamicCall("GetSingleData(int)", 1)))

        if (TRName == "SABA623Q1"):  # 505계좌 당일 손익
            nCnt = self.IndiTR.dynamicCall("GetSingleRowCount()")
            DATA1 = {}
            DATA1['전일예수금'] = int(self.IndiTR.dynamicCall("GetSingleData(int)", 4))
            DATA1['당일예수금'] = int(self.IndiTR.dynamicCall("GetSingleData(int)", 5))
            DATA1['전일평가금액'] = int(self.IndiTR.dynamicCall("GetSingleData(int)", 7))
            DATA1['금일평가금액'] = int(self.IndiTR.dynamicCall("GetSingleData(int)", 8))
            today_profit = (DATA1['당일예수금'] + DATA1['금일평가금액']) - (DATA1['전일예수금'] + DATA1['전일평가금액'])
            self.DATA505["전일금일"].append(today_profit)


        self.rqidD.__delitem__(rqid)

        # 시스템 메시지를 받은 경우 출력합니다.
    def ReceiveSysMsg(self, MsgID):
        print("System Message Received = ", MsgID)

class IndiWindow2(QMainWindow):
    def __init__(self):
        super(IndiWindow2, self).__init__()
        self.setWindowTitle("IndiExample")

        # 인디의 TR을 처리할 변수를 생성합니다.
        self.IndiTR = QAxWidget("GIEXPERTCONTROL.GiExpertControlCtrl.1")

        # Indi API event
        self.IndiTR.ReceiveData.connect(self.ReceiveData)
        self.IndiTR.ReceiveSysMsg.connect(self.ReceiveSysMsg)
        self.rqidD = {}  # TR 관리를 위해 사전 변수를 하나 생성합니다.

        # PyQt5를 통해 버튼만들고 함수와 연결시킵니다.
        btnResearch = QPushButton("488", self)
        btnResearch.setGeometry(20, 50, 50, 20)
        btn_Series = [self.btn_Search,self.btn_Search1]
        for i in btn_Series:
            btnResearch.clicked.connect(i)  # 버튼을 누르면 'btn_Search' 함수가 실행됩니다.

    def btn_Search(self):  # 488 총자산
        ret = self.IndiTR.dynamicCall("SetQueryName(QString)", "SABA655Q1")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 0, "04111127488")  # 계좌번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 1, "01")  # 상품구분 항상 '01'
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 2, "****")  # 비밀번호

        rqid = self.IndiTR.dynamicCall("RequestData()")  # 데이터 요청
        self.rqidD[rqid] = "SABA655Q1"

    def btn_Search1(self):  #488 전일금일
        ret = self.IndiTR.dynamicCall("SetQueryName(QString)", "SABA623Q1")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 0, "04111127488")  # 계좌번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 1, "01")  # 상품구분 항상 '01'
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 2, "****")  # 비밀번호

        rqid = self.IndiTR.dynamicCall("RequestData()")  # 데이터 요청
        self.rqidD[rqid] = "SABA623Q1"

    def ReceiveData(self, rqid):
        TRName = self.rqidD[rqid]

        if (TRName == "SABA655Q1"):  # 505 총자산

            self.DATA488['총자산'].append(int(self.IndiTR.dynamicCall("GetSingleData(int)", 1)))

        if (TRName == "SABA623Q1"):  # 505계좌 당일 손익
            nCnt = self.IndiTR.dynamicCall("GetSingleRowCount()")
            DATA1 = {}
            DATA1['전일예수금'] = int(self.IndiTR.dynamicCall("GetSingleData(int)", 4))
            DATA1['당일예수금'] = int(self.IndiTR.dynamicCall("GetSingleData(int)", 5))
            DATA1['전일평가금액'] = int(self.IndiTR.dynamicCall("GetSingleData(int)", 7))
            DATA1['금일평가금액'] = int(self.IndiTR.dynamicCall("GetSingleData(int)", 8))
            today_profit = (DATA1['당일예수금'] + DATA1['금일평가금액']) - (DATA1['전일예수금'] + DATA1['전일평가금액'])
            self.DATA488["전일금일"].append(today_profit)


        self.rqidD.__delitem__(rqid)

        # 시스템 메시지를 받은 경우 출력합니다.
    def ReceiveSysMsg(self, MsgID):
        print("System Message Received = ", MsgID)


class IndiWindow3(QMainWindow):
    def __init__(self):
        super(IndiWindow3, self).__init__()
        self.setWindowTitle("IndiExample")

        # 인디의 TR을 처리할 변수를 생성합니다.
        self.IndiTR = QAxWidget("GIEXPERTCONTROL.GiExpertControlCtrl.1")

        # Indi API event
        self.IndiTR.ReceiveData.connect(self.ReceiveData)
        self.IndiTR.ReceiveSysMsg.connect(self.ReceiveSysMsg)
        self.rqidD = {}  # TR 관리를 위해 사전 변수를 하나 생성합니다.

        # PyQt5를 통해 버튼만들고 함수와 연결시킵니다.
        btnResearch = QPushButton("677", self)
        btnResearch.setGeometry(20, 50, 50, 20)
        btnResearch.clicked.connect(self.btn_Search)  # 버튼을 누르면 'btn_Search' 함수가 실행됩니다.

    def btn_Search(self):  # 677 총자산
        ret = self.IndiTR.dynamicCall("SetQueryName(QString)", "SABA655Q1")
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 0, "04111156677")  # 계좌번호
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 1, "01")  # 상품구분 항상 '01'
        ret = self.IndiTR.dynamicCall("SetSingleData(int, QString)", 2, "****")  # 비밀번호

        rqid = self.IndiTR.dynamicCall("RequestData()")  # 데이터 요청
        self.rqidD[rqid] = "SABA655Q1"

    def ReceiveData(self, rqid):
        TRName = self.rqidD[rqid]

        if (TRName == "SABA655Q1"):  # 677 총자산

            self.DATA677['총자산'].append(int(self.IndiTR.dynamicCall("GetSingleData(int)", 1)))

        self.rqidD.__delitem__(rqid)


        # 시스템 메시지를 받은 경우 출력합니다.
    def ReceiveSysMsg(self, MsgID):
        print("System Message Received = ", MsgID)



class MyDialog(QtWidgets.QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowTitle('QMessageBox Example')
        self.setGeometry(200, 200, 200, 200)  # left top width height

        btn = QtWidgets.QPushButton(self)
        btn.setGeometry(50, 50, 100, 50)
        btn.setText('Show')
        btn.clicked.connect(self.showMessageBox)

    def showMessageBox(self):
        msgbox = QtWidgets.QMessageBox(self)
        msgbox.question(self, 'MessageBox title',IndiWindow.DATA397 , QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)


if __name__ == "__main__":
    app = QApplication(sys.argv)

    IndiWindow = IndiWindow()
    IndiWindow1 = IndiWindow1()
    IndiWindow2 = IndiWindow2()
    IndiWindow3 = IndiWindow3()

    IndiWindow.show()
    IndiWindow1.show()
    IndiWindow2.show()
    IndiWindow3.show()

    IndiWindow.DATA397 = {'총자산': [], '매수약정금액': [], '매도약정금액': [], '수수료': [], '당일손익': [], '체결수량': []}
    IndiWindow1.DATA505 = {'총자산':[],'전일금일':[]}
    IndiWindow2.DATA488 = {'총자산': [], '전일금일': []}
    IndiWindow3.DATA677 = {'총자산': []}
    app.exec_()

print(IndiWindow.DATA397)
print(IndiWindow1.DATA505)
print(IndiWindow2.DATA488)
print(IndiWindow3.DATA677)



def for_397(a):
    k = []
    for i in a.values():
        i = str(i).split('.')[0]
        i = str(i).replace("[","")
        i = str(i).replace("]", "")
        i = str(i).replace("'","")
        i = int(i)

        k.append(str(i))
    k[0] = str(int(k[0])//1000)
    k[1] = str((int(k[1])//100)/10)
    k[2] = str((int(k[2])//100)/10)

    kk = [[i,k] for i,k in zip(a.keys(),k)]
    return kk

def for_488505(b):
    k = []
    for i in b.values():
        i = str(i).replace("[", "")
        i = str(i).replace("]", "")
        k.append(str(i))

    k[0] = str(int(k[0])//1000)
    k[1] = str(int(k[1])//1000)
    kk = [[i, k] for i, k in zip(b.keys(), k)]
    return kk

def for_677(d):
    k = []
    for i in d.values():
        i = str(i).replace("[", "")
        i = str(i).replace("]", "")
        k.append(str(i))

    k[0] = str(int(k[0])//1000)

    kk = [[i, k] for i, k in zip(d.keys(), k)]
    kk.append(['세전평가손익',str(2700000-int(k[0]))])
    return kk


a = for_397(IndiWindow.DATA397)
b = for_488505(IndiWindow1.DATA505)
c = for_488505(IndiWindow2.DATA488)
d = for_677(IndiWindow3.DATA677)

print("a 딕셔너리는?: ")
print(a)

fname = 'C:/Users/FOS_08/Desktop/오늘의숫자.txt'
k = open(fname,'w')
k.write('[397입니다]\n')
k.write('\n')
for i in a:
    k.write(i[0]+'\n'+'\n')
    if i[0] not in ['매수약정금액','매도약정금액']:

        if len(str(i[1])) <= 6:

            k.write(str(i[1])[:-3] + ',' + str(i[1])[-3:] + '\n' + '\n')

        elif len(str(i[1])) > 6:

            k.write(str(i[1])[:-6] + ',' + str(i[1])[-6:-3] + ',' + str(i[1])[-3:] + '\n' + '\n')
    elif i[0] in ['매수약정금액','매도약정금액']:

        if len(str(i[1])) <= 8:

            k.write(str(i[1])[:-5] + ',' + str(i[1])[-5:] + '\n' + '\n')

        elif len(str(i[1])) > 8:

            k.write(str(i[1])[:-8] + ',' + str(i[1])[-8:-5] + ',' + str(i[1])[-5:] + '\n' + '\n')

k.write('\n')
k.write('[505입니다]'+'\n')
k.write('\n')
for i in b:
    k.write(i[0]+'\n'+'\n')
    if len(str(i[1])) <= 6:

        k.write(str(i[1])[:-3] + ',' + str(i[1])[-3:] + '\n' + '\n')

    elif len(str(i[1])) > 6:

        k.write(str(i[1])[:-6] + ',' + str(i[1])[-6:-3] + ',' + str(i[1])[-3:] + '\n' + '\n')

k.write('\n')
k.write('[488입니다]'+'\n')
k.write('\n')
for i in c:
    k.write(i[0]+'\n'+'\n')
    if len(str(i[1])) <= 6:

        k.write(str(i[1])[:-3] + ',' + str(i[1])[-3:] + '\n' + '\n')

    elif len(str(i[1])) > 6:

        k.write(str(i[1])[:-6] + ',' + str(i[1])[-6:-3] + ',' + str(i[1])[-3:] + '\n' + '\n')

k.write('\n')
k.write('[677입니다]'+'\n')
k.write('\n')
for i in d:
    k.write(i[0]+'\n'+'\n')
    if len(str(i[1])) <=6:

        k.write(str(i[1])[:-3]+','+str(i[1])[-3:]+'\n'+'\n')

    elif len(str(i[1])) >6:

        k.write(str(i[1])[:-6]+','+ str(i[1])[-6:-3] + ',' + str(i[1])[-3:] + '\n' + '\n')

k.close()

myfile = 'C:/Users/FOS_08/Desktop/오늘의숫자.txt'
k = os.startfile(myfile)
